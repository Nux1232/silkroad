#BlueJ class context
comment0.target=SpiralPath
comment0.text=\r\n\ Sistema\ de\ coordenadas\ en\ espiral\ para\ el\ simulador\ SilkRoad\r\n\ Esta\ clase\ calcula\ las\ posiciones\ exactas\ siguiendo\ el\ patr\u00F3n\ de\ espiral\ cuadrada\r\n
comment1.params=length\ startX\ startY\ segmentSize\ increment
comment1.target=SpiralPath(int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Constructor\ que\ calcula\ todas\ las\ posiciones\ de\ la\ espiral\r\n\ @param\ length\ N\u00FAmero\ de\ posiciones\ en\ la\ espiral\r\n\ @param\ startX\ Coordenada\ X\ inicial\r\n\ @param\ startY\ Coordenada\ Y\ inicial\r\n\ @param\ segmentSize\ Tama\u00F1o\ inicial\ del\ segmento\r\n\ @param\ increment\ Incremento\ entre\ segmentos\r\n
comment10.params=pos1\ pos2
comment10.target=double\ getDistance(int,\ int)
comment10.text=\r\n\ Calcular\ la\ distancia\ entre\ dos\ posiciones\ en\ la\ espiral\r\n\ @param\ pos1\ Primera\ posici\u00F3n\r\n\ @param\ pos2\ Segunda\ posici\u00F3n\r\n\ @return\ Distancia\ euclidiana\r\n
comment11.params=
comment11.target=java.lang.String\ getAllPositions()
comment11.text=\r\n\ Obtener\ todas\ las\ posiciones\ como\ string\ para\ debugging\r\n\ @return\ String\ con\ todas\ las\ coordenadas\r\n
comment12.params=newLength
comment12.target=SpiralPath\ resize(int)
comment12.text=\r\n\ Crear\ una\ copia\ del\ path\ con\ diferente\ longitud\r\n\ @param\ newLength\ Nueva\ longitud\r\n\ @return\ Nuevo\ SpiralPath\r\n
comment2.params=
comment2.target=void\ calculateSpiralPositions()
comment2.text=\r\n\ Calcula\ todas\ las\ posiciones\ siguiendo\ el\ patr\u00F3n\ de\ espiral\ cuadrada\r\n
comment3.params=position
comment3.target=int\ getX(int)
comment3.text=\r\n\ Obtener\ la\ coordenada\ X\ de\ una\ posici\u00F3n\ espec\u00EDfica\r\n\ @param\ position\ Posici\u00F3n\ en\ la\ espiral\ (0-based)\r\n\ @return\ Coordenada\ X\r\n
comment4.params=position
comment4.target=int\ getY(int)
comment4.text=\r\n\ Obtener\ la\ coordenada\ Y\ de\ una\ posici\u00F3n\ espec\u00EDfica\r\n\ @param\ position\ Posici\u00F3n\ en\ la\ espiral\ (0-based)\r\n\ @return\ Coordenada\ Y\r\n
comment5.params=position
comment5.target=int[]\ getCoordinates(int)
comment5.text=\r\n\ Obtener\ las\ coordenadas\ como\ array\ [x,\ y]\r\n\ @param\ position\ Posici\u00F3n\ en\ la\ espiral\r\n\ @return\ Array\ con\ [x,\ y]\r\n
comment6.params=
comment6.target=int\ getLength()
comment6.text=\r\n\ Obtener\ el\ n\u00FAmero\ total\ de\ posiciones\r\n\ @return\ Longitud\ de\ la\ espiral\r\n
comment7.params=position
comment7.target=boolean\ isValidPosition(int)
comment7.text=\r\n\ Verificar\ si\ una\ posici\u00F3n\ es\ v\u00E1lida\r\n\ @param\ position\ Posici\u00F3n\ a\ verificar\r\n\ @return\ true\ si\ es\ v\u00E1lida\r\n
comment8.params=currentPosition
comment8.target=int\ getNextPosition(int)
comment8.text=\r\n\ Obtener\ la\ siguiente\ posici\u00F3n\ v\u00E1lida\r\n\ @param\ currentPosition\ Posici\u00F3n\ actual\r\n\ @return\ Siguiente\ posici\u00F3n\ (o\ la\ misma\ si\ es\ la\ \u00FAltima)\r\n
comment9.params=currentPosition
comment9.target=int\ getPreviousPosition(int)
comment9.text=\r\n\ Obtener\ la\ posici\u00F3n\ anterior\ v\u00E1lida\r\n\ @param\ currentPosition\ Posici\u00F3n\ actual\r\n\ @return\ Posici\u00F3n\ anterior\ (o\ la\ misma\ si\ es\ la\ primera)\r\n
numComments=13
