#BlueJ class context
comment0.target=Shape
comment1.params=
comment1.target=Shape()
comment1.text=\r\n\ Default\ constructor\ for\ Shape\r\n
comment10.params=
comment10.target=void\ moveDown()
comment10.text=\r\n\ Move\ the\ shape\ a\ few\ pixels\ down.\r\n
comment11.params=distance
comment11.target=void\ moveHorizontal(int)
comment11.text=\r\n\ Move\ the\ shape\ horizontally.\r\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\r\n
comment12.params=distance
comment12.target=void\ moveVertical(int)
comment12.text=\r\n\ Move\ the\ shape\ vertically.\r\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\r\n
comment13.params=distance
comment13.target=void\ slowMoveHorizontal(int)
comment13.text=\r\n\ Slowly\ move\ the\ shape\ horizontally.\r\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\r\n
comment14.params=distance
comment14.target=void\ slowMoveVertical(int)
comment14.text=\r\n\ Slowly\ move\ the\ shape\ vertically.\r\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\r\n
comment15.params=newColor
comment15.target=void\ changeColor(java.lang.String)
comment15.text=\r\n\ Change\ the\ color.\r\n\ @param\ newColor\ the\ new\ color.\ Valid\ colors\ are\ "red",\ "yellow",\ "blue",\ "green",\r\n\ "magenta",\ "cyan",\ "orange",\ "pink",\ "gray",\ "darkGray",\ "lightGray",\ "white",\ and\ "black".\r\n
comment16.params=
comment16.target=int\ getXPosition()
comment16.text=\r\n\ Get\ the\ current\ x\ position\ of\ the\ shape.\r\n\ @return\ The\ x\ position\ in\ pixels\r\n
comment17.params=
comment17.target=int\ getYPosition()
comment17.text=\r\n\ Get\ the\ current\ y\ position\ of\ the\ shape.\r\n\ @return\ The\ y\ position\ in\ pixels\r\n
comment18.params=
comment18.target=java.lang.String\ getColor()
comment18.text=\r\n\ Get\ the\ current\ color\ of\ the\ shape.\r\n\ @return\ The\ color\ as\ a\ string\r\n
comment19.params=
comment19.target=boolean\ isVisible()
comment19.text=\r\n\ Check\ if\ the\ shape\ is\ currently\ visible.\r\n\ @return\ true\ if\ visible,\ false\ otherwise\r\n
comment2.params=xPosition\ yPosition\ color
comment2.target=Shape(int,\ int,\ java.lang.String)
comment2.text=\r\n\ Constructor\ with\ parameters\ for\ Shape\r\n\ @param\ xPosition\ The\ x\ position\ of\ the\ shape\r\n\ @param\ yPosition\ The\ y\ position\ of\ the\ shape\r\n\ @param\ color\ The\ color\ of\ the\ shape\r\n
comment20.params=x\ y
comment20.target=void\ setPosition(int,\ int)
comment20.text=\r\n\ Set\ the\ position\ of\ the\ shape\ directly.\r\n\ @param\ x\ The\ new\ x\ position\r\n\ @param\ y\ The\ new\ y\ position\r\n
comment21.params=newX\ newY
comment21.target=void\ moveTo(int,\ int)
comment21.text=\r\n\ Move\ the\ shape\ to\ a\ specific\ position.\r\n\ @param\ newX\ The\ target\ x\ position\r\n\ @param\ newY\ The\ target\ y\ position\r\n
comment22.params=factor
comment22.target=void\ scale(double)
comment22.text=\r\n\ Scale\ the\ shape\ by\ a\ factor\ -\ must\ be\ implemented\ by\ subclasses\r\n\ @param\ factor\ The\ scaling\ factor\ (1.0\ \=\ no\ change,\ 2.0\ \=\ double\ size,\ 0.5\ \=\ half\ size)\r\n
comment23.params=
comment23.target=Shape\ copy()
comment23.text=\r\n\ Create\ a\ copy\ of\ this\ shape\ -\ must\ be\ implemented\ by\ subclasses\r\n\ @return\ A\ new\ Shape\ object\ with\ the\ same\ properties\r\n
comment24.params=
comment24.target=double\ getArea()
comment24.text=\r\n\ Calculate\ the\ area\ of\ the\ shape\ -\ must\ be\ implemented\ by\ subclasses\r\n\ @return\ The\ area\ of\ the\ shape\r\n
comment25.params=x\ y
comment25.target=boolean\ contains(int,\ int)
comment25.text=\r\n\ Check\ if\ a\ point\ is\ inside\ the\ shape\ -\ must\ be\ implemented\ by\ subclasses\r\n\ @param\ x\ The\ x\ coordinate\ of\ the\ point\r\n\ @param\ y\ The\ y\ coordinate\ of\ the\ point\r\n\ @return\ true\ if\ the\ point\ is\ inside\ the\ shape\r\n
comment26.params=
comment26.target=java.lang.String\ toString()
comment26.text=\r\n\ Get\ string\ representation\ of\ the\ shape.\r\n\ @return\ String\ with\ shape\ properties\r\n
comment27.params=obj
comment27.target=boolean\ equals(java.lang.Object)
comment27.text=\r\n\ Check\ if\ two\ shapes\ are\ equal\ in\ terms\ of\ position,\ color\ and\ visibility.\r\n\ @param\ obj\ The\ object\ to\ compare\ with\r\n\ @return\ true\ if\ the\ shapes\ have\ the\ same\ basic\ properties\r\n
comment28.params=
comment28.target=int\ hashCode()
comment28.text=\r\n\ Generate\ hash\ code\ for\ the\ shape.\r\n\ @return\ Hash\ code\ based\ on\ shape\ properties\r\n
comment3.params=
comment3.target=void\ makeVisible()
comment3.text=\r\n\ Make\ this\ shape\ visible.\ If\ it\ was\ already\ visible,\ do\ nothing.\r\n
comment4.params=
comment4.target=void\ makeInvisible()
comment4.text=\r\n\ Make\ this\ shape\ invisible.\ If\ it\ was\ already\ invisible,\ do\ nothing.\r\n
comment5.params=
comment5.target=void\ draw()
comment5.text=\r\n\ Abstract\ method\ to\ draw\ the\ shape\ -\ must\ be\ implemented\ by\ subclasses\r\n
comment6.params=
comment6.target=void\ erase()
comment6.text=\r\n\ Erase\ the\ shape\ on\ screen.\r\n
comment7.params=
comment7.target=void\ moveRight()
comment7.text=\r\n\ Move\ the\ shape\ a\ few\ pixels\ to\ the\ right.\r\n
comment8.params=
comment8.target=void\ moveLeft()
comment8.text=\r\n\ Move\ the\ shape\ a\ few\ pixels\ to\ the\ left.\r\n
comment9.params=
comment9.target=void\ moveUp()
comment9.text=\r\n\ Move\ the\ shape\ a\ few\ pixels\ up.\r\n
numComments=29
